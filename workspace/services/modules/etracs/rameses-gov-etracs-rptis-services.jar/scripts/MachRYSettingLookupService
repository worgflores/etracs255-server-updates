import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.eserver.*;
import java.rmi.server.UID;

public class MachRYSettingLookupService
{
	@PersistenceContext('main')
	def em
     

    @ProxyMethod
    public def lookupAssessLevels(params) {
        params.searchtext = (params.searchtext ? params.searchtext : '') + '%'
        def list = em.sqlContext.createNamedQuery('machrysettinglookup:lookupAssessLevels')
                    .setParameters(params).resultList   
        return filterByBarangay(params, list)   
    }

    @ProxyMethod
    public def lookupAssessLevelByPrevId(previd) {
        return em.sqlContext.createNamedQuery('machrysettinglookup:lookupAssessLevelByPrevId')
                .setParameter('previd', previd).singleResult
    }


    @ProxyMethod
    public def lookupAssessLevelByRange( machassesslevelid, mv ) {
        return em.sqlContext.createNamedQuery('machrysettinglookup:lookupAssessLevelByRange')
                    .setParameter('machassesslevelid', machassesslevelid)
                    .setParameter('mv', mv)
                    .singleResult   
    }

	@ProxyMethod
    public def lookupMachRySettingById(objid){
        return em.sqlContext.createNamedQuery('machrysettinglookup:lookupMachRySettingById')
                .setParameter('objid', objid).singleResult
    }


    @ProxyMethod
    public def lookupForex(params){
        return em.sqlContext.createNamedQuery('machrysettinglookup:lookupForex')
                .setParameters(params).singleResult
    }

    @ProxyMethod
    public def lookupForexByPrevId(previd){
        return em.sqlContext.createNamedQuery('machrysettinglookup:lookupForexByPrevId')
                .setParameter('previd', previd).singleResult
    }

    def filterByBarangay(params, list){
        def res = list.findAll{it.barangayid == params.barangayid}
        if ( res )
            return res 
        return list.findAll{it.barangayid == null} 
    }

}
