import com.rameses.annotations.*
import com.rameses.util.*
import com.rameses.common.*
import treasury.utils.*;

class EORService {

    @Env 
    def env 

    @DataContext('eor')
    def eorEm;

    @DataContext('paymentpartner')
    def partnerEm;

    @Service("DateService")
    def dateService
        
    @Service("NumberService")
    def numSvc  

    @Service("EORNumberService")
    def eorNumSvc;

    @ProxyMethod
    public def post( def po ) {

        def itemAcctUtil = new ItemAccountUtil();

        if(!po.items)
            throw new Exception("Please provide items in EORService.post");      
        def svrDate = dateService.serverDate;
        def entity = [:];
        entity.partnerid = po.partnerid;
        entity.receiptno = eorNumSvc.getNextEORNumber( po.partnerid );
        entity.receiptdate = po.tracedate;
        entity.txndate = svrDate;
        entity.state = 'POSTED';
        entity.txntype = po.txntype;
        entity.txntypename = po.txntypename;

        entity.tracedate = po.tracedate;
        entity.traceid = po.traceid;

        entity.paidby = po.paidby; 
        entity.paidbyaddress = po.paidbyaddress;
        entity.payer = po.payer;
        entity.remarks = po.particulars; 
        entity.refid = po.refid;
        entity.paymentrefid = po.paymentrefid;
        entity.amount = po.amount;
        entity.remarks = po.particulars;

        entity.paymethod = po.origin; 

        if(!entity.paymentrefid)
            throw new Exception("entity.paymentrefid is null");

        entity.items = po.items; 
        entity.items.findAll{ !it.item.fund?.objid }.each {
            def a = itemAcctUtil.lookup( it.item.objid );
            it.item = a;
        }
        entity.sharing = po.sharing;
        return eorEm.create( entity ); 
    }   

    
}
