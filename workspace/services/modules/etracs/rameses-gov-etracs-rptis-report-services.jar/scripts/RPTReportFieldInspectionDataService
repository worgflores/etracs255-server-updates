import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class RPTReportFieldInspectionDataService
{
    @ActiveDB('rptreport_fieldinspection')
    def em

    @DataContext('faas_previous')
    def em_faas_previous 


    @Async
	@ProxyMethod
	public def generateFieldInspectionDataBuilding( params )  {
		params.barangayid = params.barangay?.objid

		params.orderby = ''
		if (params.ordertype.id == 'pin') {
			params.orderby = 'ORDER BY t.pin, t.suffix, t.owner_name ' 
		} else {
			params.orderby = 'ORDER BY t.owner_name, t.pin, t.suffix' 
		}

		def list = em.getFieldInspectionDataBuilding(params)
		if( ! list ) throw new Exception('Records not found.')
		list.each{ rpu ->
			def prevlist = em_faas_previous.find([faasid:rpu.faasid]).list()
            if (prevlist){
                rpu.prevowner = prevlist.prevowner.join(' / ')
            }
			if (rpu.rputype == 'land'){
				def classes = em.getLandSpecificClasses(rpu)
				if (classes){
					rpu.kind = classes.unique().name.join('/');
				}
				rpu.parcel = rpu.parcel+''
			}
			else if (rpu.rputype == 'bldg'){
				def cols = em.getBldgStrucutureInspectionInfo(rpu)
				rpu.columns = cols.find{it.columns != null}?.columns
				rpu.extwalls = cols.find{it.extwalls != null}?.extwalls
				rpu.roofing = cols.find{it.roofing != null}?.roofing
				rpu.parcel = 'B-' + rpu.parcel 
			}
		}

		return [reportdata:list]
	}
}
