import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;

class RPTCertificationNoEncumbranceService 
{
    @PersistenceContext('main')
    def em;

    @Service('RPTCertificationService')
    def certSvc 

    @Service('NumberService')
    def numSvc 

	
	@ProxyMethod
	public def createCertification( cert ) {
		certSvc.validateFaas(cert)
		validateAnnotated(cert)
		certSvc.createCertification(cert)
		cert.putAll(certSvc.getFaasInfo(cert.faasid))
		certSvc.makeHtmlSafe(cert)
		return cert 
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		cert.putAll(certSvc.getFaasInfo(cert.faasid))
		return cert 
	}


	void validateAnnotated(cert){
		def annotation = em.sqlContext.createNamedQuery('rptcertification:getAnnotation')
				.setParameter('faasid', cert.faasid).singleResult
		if (annotation)	{
			throw new Exception('FAAS is currently annotated by Annotation No. ' + annotation.txnno + '.')
		}
	}

}
